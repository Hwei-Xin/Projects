<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.24.0115.0353                               -->
<workbook original-version='18.1' source-build='2023.2.5 (20232.24.0115.0353)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (ST2187_coursework_dataset_2023-24)' inline='true' name='federated.0zphur41ukrbkd1etanaq0hay071' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ST2187_coursework_dataset_2023-24' name='excel-direct.1sqmcsw0e6olgj17hk9pk0muak4q'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Hwei Xin/Dropbox/Uni Year 2/Business Analytics, Applied Methods &amp; Prediction/Coursework/ST2187_coursework_dataset_2023-24.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1sqmcsw0e6olgj17hk9pk0muak4q' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='City' ordinal='8' />
            <column datatype='string' name='State' ordinal='9' />
            <column datatype='string' name='Country' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Market' ordinal='12' />
            <column datatype='string' name='Region' ordinal='13' />
            <column datatype='string' name='Product ID' ordinal='14' />
            <column datatype='string' name='Category' ordinal='15' />
            <column datatype='string' name='Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='real' name='Sales' ordinal='18' />
            <column datatype='integer' name='Quantity' ordinal='19' />
            <column datatype='real' name='Discount' ordinal='20' />
            <column datatype='real' name='Profit' ordinal='21' />
            <column datatype='real' name='Shipping Cost' ordinal='22' />
            <column datatype='string' name='Order Priority' ordinal='23' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1sqmcsw0e6olgj17hk9pk0muak4q' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='City' ordinal='8' />
            <column datatype='string' name='State' ordinal='9' />
            <column datatype='string' name='Country' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Market' ordinal='12' />
            <column datatype='string' name='Region' ordinal='13' />
            <column datatype='string' name='Product ID' ordinal='14' />
            <column datatype='string' name='Category' ordinal='15' />
            <column datatype='string' name='Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='real' name='Sales' ordinal='18' />
            <column datatype='integer' name='Quantity' ordinal='19' />
            <column datatype='real' name='Discount' ordinal='20' />
            <column datatype='real' name='Profit' ordinal='21' />
            <column datatype='real' name='Shipping Cost' ordinal='22' />
            <column datatype='string' name='Order Priority' ordinal='23' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X10001:no:A1:X10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E9632D27702740399E16F57478F48E8F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E9632D27702740399E16F57478F48E8F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E9632D27702740399E16F57478F48E8F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E9632D27702740399E16F57478F48E8F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E9632D27702740399E16F57478F48E8F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E9632D27702740399E16F57478F48E8F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E9632D27702740399E16F57478F48E8F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E9632D27702740399E16F57478F48E8F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E9632D27702740399E16F57478F48E8F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E9632D27702740399E16F57478F48E8F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E9632D27702740399E16F57478F48E8F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E9632D27702740399E16F57478F48E8F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E9632D27702740399E16F57478F48E8F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E9632D27702740399E16F57478F48E8F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E9632D27702740399E16F57478F48E8F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E9632D27702740399E16F57478F48E8F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E9632D27702740399E16F57478F48E8F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E9632D27702740399E16F57478F48E8F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E9632D27702740399E16F57478F48E8F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E9632D27702740399E16F57478F48E8F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E9632D27702740399E16F57478F48E8F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E9632D27702740399E16F57478F48E8F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E9632D27702740399E16F57478F48E8F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_E9632D27702740399E16F57478F48E8F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[pcto:sum:Profit:qk:4]&quot;' value='Profit %' />
          <alias key='&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[pcto:sum:Quantity:qk]&quot;' value='Quantity %' />
        </aliases>
      </column>
      <column caption='Profit Margin' datatype='real' default-format='p0.00%' name='[Calculation_262616188276289539]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Market]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Africa&quot;' value='AF' />
          <alias key='&quot;APAC&quot;' value='AP' />
          <alias key='&quot;Canada&quot;' value='CA' />
          <alias key='&quot;EMEA&quot;' value='EM' />
          <alias key='&quot;LATAM&quot;' value='LA' />
        </aliases>
      </column>
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
      <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_E9632D27702740399E16F57478F48E8F]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Sheet1_E9632D27702740399E16F57478F48E8F]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Sheet1_E9632D27702740399E16F57478F48E8F:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Shipping Cost]' derivation='Avg' name='[avg:Shipping Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Median' name='[med:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Profit]' derivation='Avg' name='[pcdf:avg:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Profit]' derivation='Avg' name='[pcto:avg:Profit:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Avg' name='[pcto:avg:Profit:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Avg' name='[pcto:avg:Profit:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' type='PctTotal'>
          <order field='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]' />
          <order field='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Profit]' derivation='Avg' name='[pcto:avg:Profit:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Avg' name='[pcto:avg:Profit:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' type='PctTotal'>
          <order field='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]' />
          <order field='[federated.0zphur41ukrbkd1etanaq0hay071].[Sub-Category]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Profit]' derivation='Avg' name='[pcto:avg:Profit:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0zphur41ukrbkd1etanaq0hay071].[Sub-Category]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Avg' name='[pcto:avg:Profit:qk:7]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' type='PctTotal'>
          <order field='[federated.0zphur41ukrbkd1etanaq0hay071].[Category]' />
          <order field='[federated.0zphur41ukrbkd1etanaq0hay071].[Sub-Category]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Profit]' derivation='Avg' name='[pcto:avg:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' type='PctTotal'>
          <order field='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]' />
          <order field='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' type='PctTotal'>
          <order field='[federated.0zphur41ukrbkd1etanaq0hay071].[Category]' />
          <order field='[federated.0zphur41ukrbkd1etanaq0hay071].[Sub-Category]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Quantity]' derivation='Sum' name='[pcto:sum:Quantity:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Avg' name='[pcva:avg:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]' ordering-type='Field' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Shipping Cost]' derivation='Sum' name='[sum:Shipping Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_262616188276289539]' derivation='User' name='[usr:Calculation_262616188276289539:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;North Asia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;EMEA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Caribbean&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Southeast Asia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Region:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;North Asia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;EMEA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Caribbean&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Southeast Asia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[tyr:Order Date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>#2019-01-01 00:00:00#</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>#2022-01-01 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2021-01-01 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-01-01 00:00:00#</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sub-Category:nk]' palette='tableau-20' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State:nk]' palette='jewel_bright_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Ad Dawhah&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Al Minya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Andijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ardabil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Asyut&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baja California&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Basilicata&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bihar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brasov&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cajamarca&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Catalonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chiapas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Coimbra&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Daegu&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Diyarbakir&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Elazig&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Federal District&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gauteng&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greater Poland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haifa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hims&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iasi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Isparta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jizzakh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kano&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Khánh Hòa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Klaipeda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lagos&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Litoral&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Manzini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Matabeleland North&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morelos&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nariño&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigde&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nouakchott&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Panevezys&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Piura&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Puebla&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rajshahi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ruvuma&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sancti Spíritus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Siirt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suhaj&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tanga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tianjin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ulaanbaatar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Värmland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vratsa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yangon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zhytomyr&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;&apos;Ajman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Al Fayyum&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Amasya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aqmola&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ashanti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ayacucho&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bangkok&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgorod&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bolu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burgas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Canterbury&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chaguanas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chuquisaca&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Corrientes&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Diana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Durrës&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Espírito Santo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fujian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gombe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guerrero&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Haute-Matsiatra&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hrodna&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Inhambane&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jeju&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kalimantan Selatan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Katsina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kigali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;La Libertad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liège&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lower Normandy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manawatu-Wanganui&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mehedinti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mono&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nagasaki&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Holland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Odisha&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Osun&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pernambuco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portuguesa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Queensland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Risaralda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Samsun&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sarawak&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shizuoka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Södermanland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Stara Zagora&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tabora&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Telangana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trabzon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uusimaa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vinnytsya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;White Nile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zambezia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Abruzzi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Al Jawf&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anambra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arad&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Astrakhan&apos;&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bacau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Barahona&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Benue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Boyacá&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bushehr&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carinthia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chelyabinsk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cluj&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cross River&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Distrito Capital&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eastern Cape&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Extremadura&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Galicia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grand Casablanca&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gunma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Heilongjiang&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Huila&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iringa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jiangxi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kampala&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kindia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;La Romana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Limburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lubusz&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maniema&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maseru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mérida&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montserrado&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Namibe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Northern&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Okayama&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Overijssel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Picardy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Primorsko-Goranska&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Quintana Roo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rize&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Luis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Savanes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sibiu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sonora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Suceava&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Taipei City&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tunis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vallee Du Bandama&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vlorë&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Xinjiang Uygur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zealand&quot;</bucket>
            </map>
            <map to='#5fbb68'>
              <bucket>&quot;Nova Scotia&quot;</bucket>
            </map>
            <map to='#64cdcc'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Adiyaman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alagoas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Anseba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Arica y Parinacota&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Atlántida&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bauchi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bishkek&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brittany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central Equatoria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chinandega&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dar Es Salaam&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dolj&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Entre Ríos&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Flemish Brabant&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guangdong&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Halland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hokkaido&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Izmir&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kabardino-Balkariya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Karbala&apos;&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kherson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kordestan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lara&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lombardy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maharashtra&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maramures&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mato Grosso do Sul&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Minas Gerais&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mpumalanga&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Neamt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nitra&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nueva Esparta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Parana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Plovdiv&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Qaraghandy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saida&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Santa Cruz&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sergipe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sindh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Dublin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sumatera Barat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tarija&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tizi Ouzou&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Upper Normandy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Veneto&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wellington&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yevrey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zulia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Adamaoua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Al Qadisiyah&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anhui&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ardahan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Atacama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Baja California Sur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Basque Country&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bihor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bremen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Calabarzon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Catamarca&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chiba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cojedes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Daejeon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Djelfa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Elbasan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Federation of Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gaziantep&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Groningen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hainan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hirat&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ibaraki&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Istanbul&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jubbada Hoose&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kharkiv&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kocaeli&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lagunes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Littoral&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Madrid&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maputo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Matagalpa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Michoacán&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morogoro&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;National Capital&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Opole&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Papua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Plateau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Punjab&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Razavi Khorasan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saarland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sanliurfa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Selangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sikasso&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Chungcheong&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sulawesi Tengah&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tanger-Tétouan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Timis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ulsan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Varna&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waikato&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yaracuy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ziguinchor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Abuja Capital Territory&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Al Madinah&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ancash&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aragua&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Asturias&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Baden-Württemberg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bas-Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Berlin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Braga&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Buskerud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Casanare&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cherkasy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Coahuila&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cundinamarca&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Distrito Federal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ebonyi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Extreme-Nord&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Galway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grand Gedeh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gyeonggi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Henan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hunan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Irkutsk&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jilin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kanagawa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kerala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kinshasa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;La Vega&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Limousin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lucerne&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Manipur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mashonaland West&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mersin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mopti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nampula&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Niamey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Northern Mindanao&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oyo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pichincha&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Provence-Alpes-Côte d&apos;Azur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ra&apos;s Al Khaymah&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rogaland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Luis Potosí&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saxony&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sichuan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sonsonate&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sucre&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tamaulipas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thies&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tuscany&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Valparaíso&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Volyn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yalova&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zeeland&quot;</bucket>
            </map>
            <map to='#91dcea'>
              <bucket>&quot;Quebec&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Al Basrah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alsace&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Aomori&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arusha&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Auvergne&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bandundu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bejaia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bolívar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bulawayo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canelones&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ceuta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chongqing&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Córdoba&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dhaka&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eskisehir&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Friuli-Venezia Giulia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Goiás&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guelma&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hatay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hovedstaden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Imo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jawa Tengah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kahramanmaras&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kastamonu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Khyber Pakhtunkhwa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kymenlaakso&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liaoning&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Los Rios&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Manabi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mecklenburg-Vorpommern&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mykolayiv&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nevsehir&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;O&apos;Higgins&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oslo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Perak&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pomerania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Qostanay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rio Grande do Sul&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Salta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Santo Domingo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shanxi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Skikda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Splitsko-Dalmatinska&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ta&apos;izz&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tekirdag&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tolima&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Villa Clara&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Western Cape&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zacatecas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;&apos;Amman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Al Gharbiyah&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Amazonas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aquitaine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ashgabat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aydin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bangui&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bengkulu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Borgou&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burgundy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caquetá&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Champagne-Ardenne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cidade De Maputo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Corsica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Diffa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Düzce&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Est&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fukui&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gorj&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guizhou&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hawke&apos;s Bay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Huambo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Inner Mongolia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jerusalem&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kalimantan Timur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kaunas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kigoma&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;La Pampa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liguria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lower Saxony&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mandoul&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Meknès-Tafilalet&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monseñor Nouel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nairobi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ogun&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Otago&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pernik&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Potosí&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Querétaro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rivera&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Cristóbal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sardinia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shkodër&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sofala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stavropol&apos;&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tabuk&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trengganu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Valcea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zamfara&quot;</bucket>
            </map>
            <map to='#a4a4d5'>
              <bucket>&quot;Saskatchewan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Akwa Ibom&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Almaty&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Antwerp&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Artemisa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Auckland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bamako&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Beijing&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Boeny&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buenos Aires&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Campeche&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Centre&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chocó&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Copperbelt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Delta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Drenthe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Escuintla&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Free State&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gisborne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Harjumaa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hordaland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kafr Ash Shaykh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kasai-Oriental&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Khulna&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kwara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;León&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lorraine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malatya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maritime&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mazandaran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Misratah&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mures&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Neuquén&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norte de Santander&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nyanza&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Osh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pazardzhik&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Poitou-Charentes&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Qinghai&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rio de Janeiro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saitama&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Santiago de Cuba&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shandong&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sivas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Southern&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Surxondaryo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tbilisi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tokat&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Western&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yucatán&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aceh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Al Marqab&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andalusía&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Arauca&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Asunción&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Baghdad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Basel-Stadt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bern&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Braila&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Buzau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Castile and León&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chernihiv&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Coast&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cuscatlán&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dix-Huit Montagnes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Edirne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;F.C.T.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gangwon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Granma&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gyeongsangnam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hesse&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hunedoara&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ishikawa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jinja&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kandahar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kerman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kirovohrad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lacs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Limpopo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luhans&apos;k&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Manisa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Masovia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Meta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Moquegua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Namur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Niari&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern Territory&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Olomouc&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pahang&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Piedmont&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Provincia de Buenos Aires&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rabat-Salé-Zemmour-Zaer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rondônia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Pedro de Macorís&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saxony-Anhalt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sicily&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Souss-Massa-Draâ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sud&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tambov&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thủ Dô Hà Nội&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tyrol&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Van&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Voronezh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yamaguchi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zhambyl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Afyonkarahisar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Antalya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Atlantique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Balikesir&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bavaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brussels&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Callao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central Jutland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chiriquí&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dayr Az Zawr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Donetsk&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Enugu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gezira&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guangxi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hamadan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Holguín&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Igdir&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jakarta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kabarole&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Karnataka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Khmel&apos;nyts&apos;kyy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kuala Lumpur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Las Tunas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lorestan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maranhão&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Matruh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mtwara&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nord&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nuevo León&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Orientale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pavlodar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Plzen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qashqadaryo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rhône-Alpes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Catherine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Setúbal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Holland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sumatera Selatan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tartumaa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tlemcen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uppsala&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Veracruz&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Bengal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yobe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zürich&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Aichi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Antioquia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Atsimo-Andrefana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Balti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bay of Plenty&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bistrita-Nasaud&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bryansk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Camagüey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Luzon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chisinau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Constanta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Donga&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Equateur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Franche-Comté&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gharb-Chrarda-Béni Hssen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guantánamo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hamburg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Homyel&apos;&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ilam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jalisco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kabul&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kars&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Khomas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kumanovo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lazio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Loreto&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Makkah&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marche&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mayabeque&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Miranda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Muharraq&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Negeri Sembilan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nord-Ouest&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nusa Tenggara Barat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oruro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pays de la Loire&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Podgorica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qazvin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Riau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Michael&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Santander&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sevastopol&apos;&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sirnak&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Khorasan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sumatera Utara&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tasmania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tocantins&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Usak&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Flanders&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yogyakarta&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Al Bahr Al Ahmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Almaty City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Anzoátegui&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Artibonite&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Australian Capital Territory&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Banaadir&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Beirut&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bogota&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bujumbura-Mairie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canakkale&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cesar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Choluteca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cordillera&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denizli&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Duarte&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Esfahan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Friesland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Giurgiu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guayas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Haryana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hormozgan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Imereti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jawa Barat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kagawa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kassala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Khuzestan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kwazulu-natal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lesser Poland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Los Lagos&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maluku&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Markazi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mbeya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mwanza&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Brabant&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nzérékoré&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Osjecko-Baranjska&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Poltava&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Qom&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rio Grande do Norte&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Salah Ad Din&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Santiago del Estero&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shanghai&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skåne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Southland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sylhet&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tehran&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tokyo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Utrecht&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vienna&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Western Australia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yunnan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Al Buhayrah&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Amapá&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Apulia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ash Sharqiyah&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aveiro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Banghazi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bekes&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bolivar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bur Sa&apos;id&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cantabria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chaco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chubut&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cork&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dhi Qar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Durango&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Espaillat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fromager&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Golestan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guelmim-Es Semara&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Haut-Sassandra&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hradec Kralove&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jawa Timur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kalimantan Barat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Katanga&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kiên Giang&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;L&apos;viv&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liberec&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Managua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marrakech-Tensift-El Haouz&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Medea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monagas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nagano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oaxaca&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Osmaniye&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peravia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Porto&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Río Negro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Salzburg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;São Paulo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shinyanga&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sliven&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St. Gallen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tabasco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tel Aviv&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tottori&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uttarakhand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vilnius&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Western Visayas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zagrebacka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Adamawa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Al Qahirah&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ankara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Arequipa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Atakora&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Baki&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Batman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bingol&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brest&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Calabria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ceará&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chihuahua&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colima&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dagestan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Emilia-Romagna&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fès-Boulemane&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gelderland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hainaut&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hiroshima&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ibb&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ivano-Frankivsk&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jujuy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Khartoum&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Konya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lambayeque&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ljubljana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Magallanes y Antártica Chilena&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Matanzas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Midi-Pyrénées&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moscow&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Navarra&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ninawa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Novgorod&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oran&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pará&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Plateaux&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Puno&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Red Sea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sabah&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Semnan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Silesia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sulawesi Tenggara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Taranaki&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tỉnh Cần Thơ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Umbria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Västra Götaland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yaroslavl&apos;&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Žilina&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;Alberta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Acre&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Al Minufiyah&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arbil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aswan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bahia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bashkortostan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brandenburg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cabo Delgado&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Castile-La Mancha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cochabamba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dà Nang&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Diyala&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Edo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fars&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gansu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greater Accra&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gyor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hidalgo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hyogo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Isla de la Juventud&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jizan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kankan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kermanshah&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kirsehir&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Laghouat&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lisboa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lusaka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;México&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Moravian-Silesian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nangarhar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niassa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ondo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pinar del Río&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rajasthan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roraima&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Salvador&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Schleswig-Holstein&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sidi Bel Abbes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Australia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sud-Ouest&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Thuringia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ucayali&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vargas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vrancea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yambol&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zhejiang&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;&apos;Asir&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Al Hudaydah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Amur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ar Raqqah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Assam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Azuay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bani Suwayf&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benguela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Borno&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bursa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carabobo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ciego de Ávila&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cortés&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dire Dawa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Flanders&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estelí&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fukuoka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grad Zagreb&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gujarat&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hebei&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hubei&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jharkhand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kaliningrad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kayes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kilimanjaro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;La Paz&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lima&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luanda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Manica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Melilla&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nakhon Ratchasima&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New South Wales&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Rhine-Westphalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ouémé&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Phnom Penh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prague&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Quezaltenango&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rivers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Fernando&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shumen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sofiya-Grad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stockholm&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Táchira&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ternopil&apos;&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trentino-Alto Adige&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Valenciana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vitsyebsk&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Woqooyi Galbeed&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zanjan&quot;</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>&quot;Manitoba&quot;</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>&quot;Newfoundland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Aksaray&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alibori&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Antofagasta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Arkhangel&apos;sk&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Atsinanana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Baluchistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bechar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bitola&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Budapest&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Campania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Centrale&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chittagong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Constantine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Doukkala-Abda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Erzurum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Francisco Morazán&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gilan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guárico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Harare&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ile-de-France&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jambi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kaduna&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kasai-Occidental&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Khorezm&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kutahya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lebap&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lori&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malanje&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mardin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maysan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Misiones&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Murcia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nelson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nord-Pas-de-Calais&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nusa Tenggara Timur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Osaka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Paysandú&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Podlaskie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qina&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rift Valley&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint-Louis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Santiago&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shaanxi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sistan Va Baluchestan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Kivu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sumy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taza-Al Hoceima-Taounate&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tochigi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Usti nad Labem&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vest-Agder&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yoro&quot;</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;British Columbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Adana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Annaba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Arges&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Atlántico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Balearic Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Batna&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Biobio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Caldas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chimaltenango&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colón&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dakar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dnipropetrovs&apos;k&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland Proper&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Geneva&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guanajuato&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hajdu-Bihar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ho Chí Minh City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ica&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ivanovo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Junín&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Karaman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Khatlon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Korçë&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Languedoc-Roussillon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lodz&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Magdalena&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maradi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mato Grosso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mie&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mostaganem&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nayarit&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ningxia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Novosibirsk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ordu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paraíba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pleven&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pwani&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rhineland-Palatinate&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saga&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Santa Catarina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seoul&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sinaloa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Denmark&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sulawesi Utara&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tarapacá&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tipaza&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Upper Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vaud&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yazd&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zinder&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Abia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Al Iskandariyah&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Analamanga&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ar Riyad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Astana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Babil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Banská Bystrica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Beni&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botosani&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Busan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Caras-Severin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chaouia-Ouardigha&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cienfuegos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corum&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eastern&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Estuaire&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Galati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Granada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gulu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hedmark&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Huehuetenango&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Irbid&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jiangsu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kaluga&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kayseri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kilis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;La Rioja&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lima (city)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lublin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Manicaland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Masaya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mendoza&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montevideo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namangan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North-West&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oita&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ouest&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Piauí&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prahova&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Quindío&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rivne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Satu Mare&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Šiauliai&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sokoto&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Styria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tadla-Azilal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tete&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tripura&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Valle del Cauca&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vladimir&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zaporizhzhya&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Segment:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Consumer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Home Office&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Corporate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Market:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;EU&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;EMEA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;LATAM&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;APAC&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='sf_default' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Shipping Cost:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[med:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[none:State:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[pcdf:avg:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[pcto:avg:Profit:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[pcto:avg:Profit:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[pcto:avg:Profit:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[pcto:avg:Profit:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[pcto:avg:Profit:qk:5]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[pcto:avg:Profit:qk:6]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[pcto:avg:Profit:qk:7]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[pcto:avg:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[pcto:sum:Profit:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[pcto:sum:Profit:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[pcto:sum:Profit:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[pcto:sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[pcva:avg:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#52b7d8'>
              <bucket>&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[pcto:sum:Profit:qk:4]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[sum:Discount:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[usr:Calculation_262616188276289539:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[__tableau_internal_object_id__].[cnt:Sheet1_E9632D27702740399E16F57478F48E8F:qk]&quot;</bucket>
            </map>
            <map to='#e16032'>
              <bucket>&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[pcto:sum:Quantity:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[sum:Shipping Cost:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[sum:Quantity:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Ship Mode:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;First Class&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Standard Class&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Second Class&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Same Day&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Row ID' />
        <field-sort-custom-order field='Order ID' />
        <field-sort-custom-order field='Order Date' />
        <field-sort-custom-order field='Ship Date' />
        <field-sort-custom-order field='Ship Mode' />
        <field-sort-custom-order field='Customer ID' />
        <field-sort-custom-order field='Customer Name' />
        <field-sort-custom-order field='Segment' />
        <field-sort-custom-order field='Calculation_405042524172304388' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='State' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='Postal Code' />
        <field-sort-custom-order field='Market' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Product ID' />
        <field-sort-custom-order field='Category' />
        <field-sort-custom-order field='Sub-Category' />
        <field-sort-custom-order field='Product Name' />
        <field-sort-custom-order field='Calculation_405042524158705665' />
        <field-sort-custom-order field='Sales' />
        <field-sort-custom-order field='Quantity' />
        <field-sort-custom-order field='Discount' />
        <field-sort-custom-order field='Profit' />
        <field-sort-custom-order field='Shipping Cost' />
        <field-sort-custom-order field='Order Priority' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_E9632D27702740399E16F57478F48E8F'>
            <properties context=''>
              <relation connection='excel-direct.1sqmcsw0e6olgj17hk9pk0muak4q' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='City' ordinal='8' />
                  <column datatype='string' name='State' ordinal='9' />
                  <column datatype='string' name='Country' ordinal='10' />
                  <column datatype='string' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Market' ordinal='12' />
                  <column datatype='string' name='Region' ordinal='13' />
                  <column datatype='string' name='Product ID' ordinal='14' />
                  <column datatype='string' name='Category' ordinal='15' />
                  <column datatype='string' name='Sub-Category' ordinal='16' />
                  <column datatype='string' name='Product Name' ordinal='17' />
                  <column datatype='real' name='Sales' ordinal='18' />
                  <column datatype='integer' name='Quantity' ordinal='19' />
                  <column datatype='real' name='Discount' ordinal='20' />
                  <column datatype='real' name='Profit' ordinal='21' />
                  <column datatype='real' name='Shipping Cost' ordinal='22' />
                  <column datatype='string' name='Order Priority' ordinal='23' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_85327D0042C74472B9E4DAC1293F06B8]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Average Profit (Category in Markets)' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Market' />
        <param name='target' value='Average Profit (Category in Markets)' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2_1E1F5B4463724F29AF9E88F44E3E366F]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Average Profit (Sub-Category in EMEA)' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Average Profit (Sub-Category in EMEA)' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Average Profit (Category in British Col.)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#f28e2b' fontsize='16'>Average Profit in Category </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (ST2187_coursework_dataset_2023-24)' name='federated.0zphur41ukrbkd1etanaq0hay071' />
          </datasources>
          <datasource-dependencies datasource='federated.0zphur41ukrbkd1etanaq0hay071'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Market]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Africa&quot;' value='AF' />
                <alias key='&quot;APAC&quot;' value='AP' />
                <alias key='&quot;Canada&quot;' value='CA' />
                <alias key='&quot;EMEA&quot;' value='EM' />
                <alias key='&quot;LATAM&quot;' value='LA' />
              </aliases>
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]'>
            <groupfilter function='member' level='[none:Market:nk]' member='&quot;Canada&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zphur41ukrbkd1etanaq0hay071].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;British Columbia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</column>
            <column>[federated.0zphur41ukrbkd1etanaq0hay071].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_0' value='#f5f5f5' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]' />
              <text column='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]' />
              <text column='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]' />
              <color column='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</field>
                  <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>78.850000000000009</value>
                <value>&quot;Furniture&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='151'>
            <formatted-text>
              <run fontcolor='#787878'>Sub-Category: </run>
              <run bold='true'><![CDATA[<[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]>]]></run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</field>
                      <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]</field>
                      <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>372.64000000000004</value>
                    <value>&quot;Office Supplies&quot;</value>
                    <value>&quot;Appliances&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-64' y='121' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{CBE75461-EA08-4A30-97F5-145A902CBCDE}' />
    </worksheet>
    <worksheet name='Average Profit (Category in EMEA)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#b04dae' fontsize='16'>Average Profit in Category </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (ST2187_coursework_dataset_2023-24)' name='federated.0zphur41ukrbkd1etanaq0hay071' />
          </datasources>
          <datasource-dependencies datasource='federated.0zphur41ukrbkd1etanaq0hay071'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Market]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Africa&quot;' value='AF' />
                <alias key='&quot;APAC&quot;' value='AP' />
                <alias key='&quot;Canada&quot;' value='CA' />
                <alias key='&quot;EMEA&quot;' value='EM' />
                <alias key='&quot;LATAM&quot;' value='LA' />
              </aliases>
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]'>
            <groupfilter function='member' level='[none:Market:nk]' member='&quot;EMEA&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]' value='256' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='19' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]' />
              <text column='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#666666' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</rows>
        <cols>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontalignment='1' fontcolor='#787878'>Sub-Category: </run>
              <run bold='true' fontalignment='1'><![CDATA[<[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]>]]></run>
              <run fontalignment='1'>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]</field>
                        <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</field>
                      <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]</field>
                      <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>61.427800000000062</value>
                    <value>&quot;Furniture&quot;</value>
                    <value>&quot;Tables&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='152' y='6' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{C359D8E0-F967-4432-A05F-2906206E9CF7}' />
    </worksheet>
    <worksheet name='Average Profit (Category in Markets)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontsize='16'>Average Profit in Category </run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (ST2187_coursework_dataset_2023-24)' name='federated.0zphur41ukrbkd1etanaq0hay071' />
          </datasources>
          <datasource-dependencies datasource='federated.0zphur41ukrbkd1etanaq0hay071'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Market]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Africa&quot;' value='AF' />
                <alias key='&quot;APAC&quot;' value='AP' />
                <alias key='&quot;Canada&quot;' value='CA' />
                <alias key='&quot;EMEA&quot;' value='EM' />
                <alias key='&quot;LATAM&quot;' value='LA' />
              </aliases>
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]' shelf='columns' />
            <shelf-sort-v2 dimension-to-sort='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]' direction='DESC' measure-to-sort-by='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]' value='52' />
            <format attr='text-format' field='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</rows>
        <cols>([federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk] / [federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk])</cols>
      </table>
      <simple-id uuid='{B6C62039-DD27-4A14-9FAB-A31ED40DB044}' />
    </worksheet>
    <worksheet name='Average Profit (Markets YoY)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7'>Average Profit across Years</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (ST2187_coursework_dataset_2023-24)' name='federated.0zphur41ukrbkd1etanaq0hay071' />
          </datasources>
          <datasource-dependencies datasource='federated.0zphur41ukrbkd1etanaq0hay071'>
            <column datatype='string' name='[Market]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Africa&quot;' value='AF' />
                <alias key='&quot;APAC&quot;' value='AP' />
                <alias key='&quot;Canada&quot;' value='CA' />
                <alias key='&quot;EMEA&quot;' value='EM' />
                <alias key='&quot;LATAM&quot;' value='LA' />
              </aliases>
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]' />
              <text column='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='1' />
                <format attr='stroke-color' value='#00000037' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</rows>
        <cols>[federated.0zphur41ukrbkd1etanaq0hay071].[tyr:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{C3AE33A5-507C-464D-A1F5-3E420D2199E6}' />
    </worksheet>
    <worksheet name='Average Profit (Order Priority in Markets)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#59a14f' fontsize='16'>Average Profit in Order Priority </run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (ST2187_coursework_dataset_2023-24)' name='federated.0zphur41ukrbkd1etanaq0hay071' />
          </datasources>
          <datasource-dependencies datasource='federated.0zphur41ukrbkd1etanaq0hay071'>
            <column datatype='string' name='[Market]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Africa&quot;' value='AF' />
                <alias key='&quot;APAC&quot;' value='AP' />
                <alias key='&quot;Canada&quot;' value='CA' />
                <alias key='&quot;EMEA&quot;' value='EM' />
                <alias key='&quot;LATAM&quot;' value='LA' />
              </aliases>
            </column>
            <column datatype='string' name='[Order Priority]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Priority]' derivation='None' name='[none:Order Priority:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e9dad4</color>
                <color>#e2c4b8</color>
                <color>#dbb09e</color>
                <color>#d49c86</color>
                <color>#cd896e</color>
                <color>#c67758</color>
                <color>#bf6743</color>
                <color>#b85730</color>
                <color>#b1481d</color>
                <color>#aa3a0d</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#b4b4b4' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0zphur41ukrbkd1etanaq0hay071].[none:Order Priority:nk] / [federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk])</rows>
        <cols>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</cols>
      </table>
      <simple-id uuid='{3CE201D7-1A41-4CAA-A0B9-9CE177F0CAF7}' />
    </worksheet>
    <worksheet name='Average Profit (Segments in Markets)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7'>Average Profit in Customer Segments </run>
            <run>Æ&#10;&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (ST2187_coursework_dataset_2023-24)' name='federated.0zphur41ukrbkd1etanaq0hay071' />
          </datasources>
          <datasource-dependencies datasource='federated.0zphur41ukrbkd1etanaq0hay071'>
            <column datatype='string' name='[Market]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Africa&quot;' value='AF' />
                <alias key='&quot;APAC&quot;' value='AP' />
                <alias key='&quot;Canada&quot;' value='CA' />
                <alias key='&quot;EMEA&quot;' value='EM' />
                <alias key='&quot;LATAM&quot;' value='LA' />
              </aliases>
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Segment:nk]' />
              <text column='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='auto' />
                <format attr='wrap' value='auto' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</rows>
        <cols>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</field>
                  <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
                  <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Segment:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>47.909405940594063</value>
                <value>&quot;Canada&quot;</value>
                <value>&quot;Consumer&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='28' y='0.6' />
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</field>
                  <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
                  <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Segment:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>45.785999999999994</value>
                <value>&quot;Canada&quot;</value>
                <value>&quot;Corporate&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='27' y='0.566667' />
          </mark-label>
          <mark-label id='2'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</field>
                  <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
                  <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Segment:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>41.309531584158478</value>
                <value>&quot;APAC&quot;</value>
                <value>&quot;Home Office&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='-26' y='0.666667' />
          </mark-label>
          <mark-label id='3'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</field>
                  <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
                  <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Segment:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>39.09546083903809</value>
                <value>&quot;APAC&quot;</value>
                <value>&quot;Consumer&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='-39' y='-45' />
          </mark-label>
          <mark-label id='4'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</field>
                  <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
                  <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Segment:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>39.906428549571658</value>
                <value>&quot;APAC&quot;</value>
                <value>&quot;Corporate&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='-39' y='-24' />
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</field>
                  <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
                  <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Segment:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>43.100416666666668</value>
                <value>&quot;Canada&quot;</value>
                <value>&quot;Home Office&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='29' y='0.566667' />
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{8319233A-8C22-4EF8-B71B-43975DE2DCFF}' />
    </worksheet>
    <worksheet name='Average Profit (Ship Mode in Markets)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f' fontsize='16'>Average Profit in  Ship Mode </run>
            <run>Æ&#10;&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (ST2187_coursework_dataset_2023-24)' name='federated.0zphur41ukrbkd1etanaq0hay071' />
          </datasources>
          <datasource-dependencies datasource='federated.0zphur41ukrbkd1etanaq0hay071'>
            <column datatype='string' name='[Market]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Africa&quot;' value='AF' />
                <alias key='&quot;APAC&quot;' value='AP' />
                <alias key='&quot;Canada&quot;' value='CA' />
                <alias key='&quot;EMEA&quot;' value='EM' />
                <alias key='&quot;LATAM&quot;' value='LA' />
              </aliases>
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e4d6e6</color>
                <color>#d8bddb</color>
                <color>#cda5d0</color>
                <color>#c18fc5</color>
                <color>#b57aba</color>
                <color>#aa67af</color>
                <color>#9e56a4</color>
                <color>#934599</color>
                <color>#88378e</color>
                <color>#7d2a83</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]' />
              <text column='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Ship Mode:nk]</rows>
        <cols>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</cols>
      </table>
      <simple-id uuid='{2CBFC9D9-41D1-4B85-9565-11A798FDF112}' />
    </worksheet>
    <worksheet name='Average Profit (States in Canada)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#e15759' fontsize='16'>Average Profit in Canada&apos;s States</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (ST2187_coursework_dataset_2023-24)' name='federated.0zphur41ukrbkd1etanaq0hay071' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0zphur41ukrbkd1etanaq0hay071'>
            <column datatype='string' name='[Market]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Africa&quot;' value='AF' />
                <alias key='&quot;APAC&quot;' value='AP' />
                <alias key='&quot;Canada&quot;' value='CA' />
                <alias key='&quot;EMEA&quot;' value='EM' />
                <alias key='&quot;LATAM&quot;' value='LA' />
              </aliases>
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]'>
            <groupfilter function='member' level='[none:Market:nk]' member='&quot;Canada&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0zphur41ukrbkd1etanaq0hay071].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0zphur41ukrbkd1etanaq0hay071].[none:State:nk]' value='136' />
          </style-rule>
          <style-rule element='header'>
            <format attr='wrap' data-class='subtotal' field='[federated.0zphur41ukrbkd1etanaq0hay071].[none:State:nk]' value='on' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e9e9d2</color>
                <color>#e2e2b5</color>
                <color>#dbdb99</color>
                <color>#d4d47f</color>
                <color>#cdcd66</color>
                <color>#c6c64f</color>
                <color>#bfbf39</color>
                <color>#b8b824</color>
                <color>#b1b111</color>
                <color>#aaaa00</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zphur41ukrbkd1etanaq0hay071].[none:State:nk]' />
              <text column='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#b4b4b4' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</rows>
        <cols>[federated.0zphur41ukrbkd1etanaq0hay071].[none:State:nk]</cols>
      </table>
      <simple-id uuid='{0B11804A-7420-49BA-80A2-B957356F14A7}' />
    </worksheet>
    <worksheet name='Average Profit (Sub-Category in EMEA)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#b04dae' fontsize='16'>Average Profit in Sub-Category </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (ST2187_coursework_dataset_2023-24)' name='federated.0zphur41ukrbkd1etanaq0hay071' />
          </datasources>
          <datasource-dependencies datasource='federated.0zphur41ukrbkd1etanaq0hay071'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Market]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Africa&quot;' value='AF' />
                <alias key='&quot;APAC&quot;' value='AP' />
                <alias key='&quot;Canada&quot;' value='CA' />
                <alias key='&quot;EMEA&quot;' value='EM' />
                <alias key='&quot;LATAM&quot;' value='LA' />
              </aliases>
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Quantity]' derivation='Sum' name='[pcto:sum:Quantity:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zphur41ukrbkd1etanaq0hay071].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[pcto:sum:Profit:qk:4]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[pcto:sum:Quantity:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0zphur41ukrbkd1etanaq0hay071].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[pcto:sum:Profit:qk:4]&quot;</bucket>
              <bucket>&quot;[federated.0zphur41ukrbkd1etanaq0hay071].[pcto:sum:Quantity:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Technology&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]'>
            <groupfilter function='member' level='[none:Market:nk]' member='&quot;EMEA&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</column>
            <column>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]</column>
            <column>[federated.0zphur41ukrbkd1etanaq0hay071].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0zphur41ukrbkd1etanaq0hay071].[:Measure Names]' value='125' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0zphur41ukrbkd1etanaq0hay071].[:Measure Names]' value='Percentage'>
              <formatted-text>
                <run>Percentage</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_1' value='#fafafa' />
            <format attr='fill-color' id='annotation_2' value='#fafafa' />
            <format attr='stroke-size' id='annotation_1' value='2' />
            <format attr='stroke-size' id='annotation_2' value='2' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zphur41ukrbkd1etanaq0hay071].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#666666' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zphur41ukrbkd1etanaq0hay071].[Multiple Values]</rows>
        <cols>([federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk] / [federated.0zphur41ukrbkd1etanaq0hay071].[:Measure Names])</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontalignment='1' fontcolor='#787878'>Sub-Category: </run>
              <run bold='true' fontalignment='1'><![CDATA[<[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]>]]></run>
              <run fontalignment='1'>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]</field>
                        <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</field>
                      <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]</field>
                      <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>61.427800000000062</value>
                    <value>&quot;Furniture&quot;</value>
                    <value>&quot;Tables&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='152' y='6' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Sub-Category: </run>
              <run bold='true'><![CDATA[<[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]</field>
                        <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</field>
                      <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]</field>
                      <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>42.997190476190461</value>
                    <value>&quot;Technology&quot;</value>
                    <value>&quot;Copiers&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='62' y='94' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{B669EACA-D1A9-4CAD-9B17-3D70D7467CA6}' />
    </worksheet>
    <worksheet name='Average Sales (States in Canada)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#e15759' fontsize='16'>Average Sales in Canada&apos;s States</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (ST2187_coursework_dataset_2023-24)' name='federated.0zphur41ukrbkd1etanaq0hay071' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0zphur41ukrbkd1etanaq0hay071'>
            <column datatype='string' name='[Market]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Africa&quot;' value='AF' />
                <alias key='&quot;APAC&quot;' value='AP' />
                <alias key='&quot;Canada&quot;' value='CA' />
                <alias key='&quot;EMEA&quot;' value='EM' />
                <alias key='&quot;LATAM&quot;' value='LA' />
              </aliases>
            </column>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Sales]' derivation='Avg' name='[avg:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]'>
            <groupfilter function='member' level='[none:Market:nk]' member='&quot;Canada&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0zphur41ukrbkd1etanaq0hay071].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0zphur41ukrbkd1etanaq0hay071].[none:State:nk]' value='136' />
            <format attr='text-format' field='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Sales:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='19' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Sales:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e6d7db</color>
                <color>#dbbec7</color>
                <color>#d0a7b4</color>
                <color>#c591a2</color>
                <color>#ba7d90</color>
                <color>#af6a80</color>
                <color>#a45971</color>
                <color>#994962</color>
                <color>#8e3b55</color>
                <color>#832e49</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zphur41ukrbkd1etanaq0hay071].[none:State:nk]' />
              <text column='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#d4d4d4' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Sales:qk]</rows>
        <cols>[federated.0zphur41ukrbkd1etanaq0hay071].[none:State:nk]</cols>
      </table>
      <simple-id uuid='{7836A335-B615-4FCC-9D93-CF2C6AFF98CE}' />
    </worksheet>
    <worksheet name='Average Shipping Cost (EMEA) '>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#b04dae' fontsize='16'>Average Shipping Cost in Sub-Category </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (ST2187_coursework_dataset_2023-24)' name='federated.0zphur41ukrbkd1etanaq0hay071' />
          </datasources>
          <datasource-dependencies datasource='federated.0zphur41ukrbkd1etanaq0hay071'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Market]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Africa&quot;' value='AF' />
                <alias key='&quot;APAC&quot;' value='AP' />
                <alias key='&quot;Canada&quot;' value='CA' />
                <alias key='&quot;EMEA&quot;' value='EM' />
                <alias key='&quot;LATAM&quot;' value='LA' />
              </aliases>
            </column>
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Shipping Cost]' derivation='Avg' name='[avg:Shipping Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Technology&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]'>
            <groupfilter function='member' level='[none:Market:nk]' member='&quot;EMEA&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Shipping Cost:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</column>
            <column>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Ship Mode:nk]' value='128' />
            <format attr='width' field='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]' value='133' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Ship Mode:nk]' />
              <text column='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Shipping Cost:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#666666' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Shipping Cost:qk]</rows>
        <cols>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Shipping Cost:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Shipping Cost:qk]</field>
                  <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Ship Mode:nk]</field>
                  <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>98.884285714285681</value>
                <value>&quot;First Class&quot;</value>
                <value>&quot;Copiers&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{DE2DA81B-1A77-41AC-8F33-088EB6AC42C5}' />
    </worksheet>
    <worksheet name='Average Shipping Cost (Markets)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f' fontsize='16'>Average Shipping Cost </run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (ST2187_coursework_dataset_2023-24)' name='federated.0zphur41ukrbkd1etanaq0hay071' />
          </datasources>
          <datasource-dependencies datasource='federated.0zphur41ukrbkd1etanaq0hay071'>
            <column datatype='string' name='[Market]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Africa&quot;' value='AF' />
                <alias key='&quot;APAC&quot;' value='AP' />
                <alias key='&quot;Canada&quot;' value='CA' />
                <alias key='&quot;EMEA&quot;' value='EM' />
                <alias key='&quot;LATAM&quot;' value='LA' />
              </aliases>
            </column>
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column-instance column='[Shipping Cost]' derivation='Avg' name='[avg:Shipping Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Shipping Cost:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Shipping Cost:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#dad9e6</color>
                <color>#c4c2db</color>
                <color>#b0acd0</color>
                <color>#9d98c5</color>
                <color>#8b85ba</color>
                <color>#7a73af</color>
                <color>#6a63a4</color>
                <color>#5b5399</color>
                <color>#4d458e</color>
                <color>#413983</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Shipping Cost:qk]' />
              <text column='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Shipping Cost:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#b4b4b4' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Shipping Cost:qk]</rows>
        <cols>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</cols>
      </table>
      <simple-id uuid='{B710381A-E60A-4B6A-8960-13C7BD48B7C9}' />
    </worksheet>
    <worksheet name='Average Shipping Cost (States in Canada) '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#e15759' fontsize='16'>Average Shipping Cost in Canada&apos;s States</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (ST2187_coursework_dataset_2023-24)' name='federated.0zphur41ukrbkd1etanaq0hay071' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0zphur41ukrbkd1etanaq0hay071'>
            <column datatype='string' name='[Market]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Africa&quot;' value='AF' />
                <alias key='&quot;APAC&quot;' value='AP' />
                <alias key='&quot;Canada&quot;' value='CA' />
                <alias key='&quot;EMEA&quot;' value='EM' />
                <alias key='&quot;LATAM&quot;' value='LA' />
              </aliases>
            </column>
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Shipping Cost]' derivation='Avg' name='[avg:Shipping Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]'>
            <groupfilter function='member' level='[none:Market:nk]' member='&quot;Canada&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0zphur41ukrbkd1etanaq0hay071].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Shipping Cost:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0zphur41ukrbkd1etanaq0hay071].[none:State:nk]' value='136' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Shipping Cost:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d5e1e6</color>
                <color>#bbd1db</color>
                <color>#a2c2d0</color>
                <color>#8bb4c5</color>
                <color>#76a6ba</color>
                <color>#6298af</color>
                <color>#508ba4</color>
                <color>#407e99</color>
                <color>#31728e</color>
                <color>#246783</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zphur41ukrbkd1etanaq0hay071].[none:State:nk]' />
              <text column='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Shipping Cost:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#d4d4d4' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Shipping Cost:qk]</rows>
        <cols>[federated.0zphur41ukrbkd1etanaq0hay071].[none:State:nk]</cols>
      </table>
      <simple-id uuid='{5BAB134B-F34F-40B7-8089-7ED595E3AD2D}' />
    </worksheet>
    <worksheet name='Correlation (Qty, Discount) '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#f28e2b' fontsize='16'>Correlation Between Purchased Quantity and Discount</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (ST2187_coursework_dataset_2023-24)' name='federated.0zphur41ukrbkd1etanaq0hay071' />
          </datasources>
          <datasource-dependencies datasource='federated.0zphur41ukrbkd1etanaq0hay071'>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='string' name='[Market]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Africa&quot;' value='AF' />
                <alias key='&quot;APAC&quot;' value='AP' />
                <alias key='&quot;Canada&quot;' value='CA' />
                <alias key='&quot;EMEA&quot;' value='EM' />
                <alias key='&quot;LATAM&quot;' value='LA' />
              </aliases>
            </column>
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0zphur41ukrbkd1etanaq0hay071].[sum:Quantity:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='stroke-color' id='annotation_0' value='#333333' />
            <format attr='border-color' id='annotation_0' value='#333333' />
            <format attr='border-style' id='annotation_0' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-color' value='#55555567' />
                <format attr='line-visibility' value='on' />
                <format attr='line-pattern-only' value='solid' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zphur41ukrbkd1etanaq0hay071].[sum:Quantity:qk]</rows>
        <cols>[federated.0zphur41ukrbkd1etanaq0hay071].[sum:Discount:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='132'>
            <formatted-text>
              <run fontcolor='#787878'>Discount: </run>
              <run bold='true'><![CDATA[<[federated.0zphur41ukrbkd1etanaq0hay071].[sum:Discount:qk]>]]></run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='15.7780526315792'>
                  <node-reference>
                    <axis>[federated.0zphur41ukrbkd1etanaq0hay071].[sum:Discount:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='888.93877551020512'>
                  <node-reference>
                    <axis>[federated.0zphur41ukrbkd1etanaq0hay071].[sum:Quantity:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='72' y='-153' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{0F22E4B9-DE5F-459D-864F-F1376B75B4BC}' />
    </worksheet>
    <worksheet name='Correlation (Shipping Cost, Profit)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f' fontsize='16'>Correlation Between Shipping Cost and Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (ST2187_coursework_dataset_2023-24)' name='federated.0zphur41ukrbkd1etanaq0hay071' />
          </datasources>
          <datasource-dependencies datasource='federated.0zphur41ukrbkd1etanaq0hay071'>
            <column datatype='string' name='[Market]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Africa&quot;' value='AF' />
                <alias key='&quot;APAC&quot;' value='AP' />
                <alias key='&quot;Canada&quot;' value='CA' />
                <alias key='&quot;EMEA&quot;' value='EM' />
                <alias key='&quot;LATAM&quot;' value='LA' />
              </aliases>
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Shipping Cost]' derivation='Sum' name='[sum:Shipping Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='60' />
            <format attr='cell-h' value='60' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.3953038454055786' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='580' />
                <format attr='maxheight' value='580' />
                <format attr='aspect' value='0' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-color' value='#55555567' />
                <format attr='line-visibility' value='on' />
                <format attr='line-pattern-only' value='solid' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zphur41ukrbkd1etanaq0hay071].[sum:Profit:qk]</rows>
        <cols>[federated.0zphur41ukrbkd1etanaq0hay071].[sum:Shipping Cost:qk]</cols>
      </table>
      <simple-id uuid='{C3C2F64F-4563-4CD7-BFD0-A27C183A0E30}' />
    </worksheet>
    <worksheet name='Profit (Sub Cat in Furniture)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#f28e2b' fontsize='16'>Profit Percentage in Furniture&apos;s Sub-Category</run>
            <run fontcolor='#f28e2b' fontsize='16'>Æ </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (ST2187_coursework_dataset_2023-24)' name='federated.0zphur41ukrbkd1etanaq0hay071' />
          </datasources>
          <datasource-dependencies datasource='federated.0zphur41ukrbkd1etanaq0hay071'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Market]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Africa&quot;' value='AF' />
                <alias key='&quot;APAC&quot;' value='AP' />
                <alias key='&quot;Canada&quot;' value='CA' />
                <alias key='&quot;EMEA&quot;' value='EM' />
                <alias key='&quot;LATAM&quot;' value='LA' />
              </aliases>
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Furniture&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]'>
            <groupfilter function='member' level='[none:Market:nk]' member='&quot;Canada&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zphur41ukrbkd1etanaq0hay071].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;British Columbia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Bookcases&quot;</bucket>
              <bucket>&quot;Chairs&quot;</bucket>
              <bucket>&quot;Tables&quot;</bucket>
              <bucket>&quot;Furnishings&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</column>
            <column>[federated.0zphur41ukrbkd1etanaq0hay071].[none:State:nk]</column>
            <column>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0zphur41ukrbkd1etanaq0hay071].[pcto:sum:Profit:qk:3]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_0' value='#f5f5f5' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0zphur41ukrbkd1etanaq0hay071].[pcto:sum:Profit:qk:3]' />
              <text column='[federated.0zphur41ukrbkd1etanaq0hay071].[pcto:sum:Profit:qk:3]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]</rows>
        <cols />
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='151'>
            <formatted-text>
              <run fontcolor='#787878'>Sub-Category: </run>
              <run bold='true'><![CDATA[<[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]>]]></run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</field>
                      <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]</field>
                      <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>372.64000000000004</value>
                    <value>&quot;Office Supplies&quot;</value>
                    <value>&quot;Appliances&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-64' y='121' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{F2270D45-78EC-4262-908C-C046396A4819}' />
    </worksheet>
    <worksheet name='Profit Margin (Markets)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontsize='16'>Net Profit Margin </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (ST2187_coursework_dataset_2023-24)' name='federated.0zphur41ukrbkd1etanaq0hay071' />
          </datasources>
          <datasource-dependencies datasource='federated.0zphur41ukrbkd1etanaq0hay071'>
            <column caption='Profit Margin' datatype='real' default-format='p0.00%' name='[Calculation_262616188276289539]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column datatype='string' name='[Market]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Africa&quot;' value='AF' />
                <alias key='&quot;APAC&quot;' value='AP' />
                <alias key='&quot;Canada&quot;' value='CA' />
                <alias key='&quot;EMEA&quot;' value='EM' />
                <alias key='&quot;LATAM&quot;' value='LA' />
              </aliases>
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_262616188276289539]' derivation='User' name='[usr:Calculation_262616188276289539:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0zphur41ukrbkd1etanaq0hay071].[usr:Calculation_262616188276289539:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0zphur41ukrbkd1etanaq0hay071].[usr:Calculation_262616188276289539:qk]' field-type='quantitative' max='0.28884501324330236' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]' value='111' />
            <format attr='text-format' field='[federated.0zphur41ukrbkd1etanaq0hay071].[usr:Calculation_262616188276289539:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0zphur41ukrbkd1etanaq0hay071].[usr:Calculation_262616188276289539:qk]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0zphur41ukrbkd1etanaq0hay071].[usr:Calculation_262616188276289539:qk]' />
              <text column='[federated.0zphur41ukrbkd1etanaq0hay071].[usr:Calculation_262616188276289539:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#555555' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zphur41ukrbkd1etanaq0hay071].[usr:Calculation_262616188276289539:qk]</rows>
        <cols>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0zphur41ukrbkd1etanaq0hay071].[usr:Calculation_262616188276289539:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
                  <field>[federated.0zphur41ukrbkd1etanaq0hay071].[usr:Calculation_262616188276289539:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Canada&quot;</value>
                <value>0.26621660206755982</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{DC391ADF-51A8-4509-A735-72CA187DE1DE}' />
    </worksheet>
    <worksheet name='Sub-Cat(Canada)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#e15759'>Average Profit in Sub-Category in Canada</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (ST2187_coursework_dataset_2023-24)' name='federated.0zphur41ukrbkd1etanaq0hay071' />
          </datasources>
          <datasource-dependencies datasource='federated.0zphur41ukrbkd1etanaq0hay071'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Market]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Africa&quot;' value='AF' />
                <alias key='&quot;APAC&quot;' value='AP' />
                <alias key='&quot;Canada&quot;' value='CA' />
                <alias key='&quot;EMEA&quot;' value='EM' />
                <alias key='&quot;LATAM&quot;' value='LA' />
              </aliases>
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]'>
            <groupfilter function='member' level='[none:Market:nk]' member='&quot;Canada&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]' />
              <text column='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</rows>
        <cols>([federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk] / [federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk])</cols>
      </table>
      <simple-id uuid='{FAF16803-FEEC-4261-8699-81B9CE843D37}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='BA Coursework' type='storyboard'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#00000000' />
        </style-rule>
        <style-rule element='story-description'>
          <format attr='background-color' value='#00000000' />
          <format attr='border-width' value='2' />
          <format attr='text-align' value='auto' />
          <format attr='vertical-align' value='center' />
          <format attr='wrap' value='auto' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='width' value='193' />
          <format attr='font-size' value='10' />
          <format attr='color' value='#ffffff' />
          <format attr='font-weight' value='bold' />
          <format attr='background-color' value='#75a1c7' />
        </style-rule>
        <style-rule element='story-title'>
          <format attr='font-weight' value='bold' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='15' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
              <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='830' />
              <zone h='87863' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='11307'>
                <flipboard active-id='3' nav-type='caption' show-nav-arrows='true'>
                  <story-points>
                    <story-point caption='Profits in Markets' captured-sheet='Markets' id='1' />
                    <story-point caption='Additional Insights in Markets ' captured-sheet='Markets Pt 2' id='2' />
                    <story-point caption='Insights in Canada Market' captured-sheet='Canada States' id='3' />
                    <story-point caption='Insights in British Columbia' captured-sheet='British Columbia' id='4' />
                    <story-point caption='Insights in EMEA Market' captured-sheet='EMEA' id='5'>
                      <capturedDeltas>
                        <worksheet name='Average Profit (Sub-Category in EMEA)'>
                          <selection-collection />
                        </worksheet>
                        <worksheet name='Average Shipping Cost (EMEA) '>
                          <annotations>
                            <annotation class='point' delta-type='edited' id='2' mark-position='1' pullback='12' text-width='217'>
                              <formatted-text>
                                <run fontalignment='1' fontcolor='#787878'>Ship Mode: </run>
                                <run bold='true' fontalignment='1'><![CDATA[<[federated.0zphur41ukrbkd1etanaq0hay071].[none:Ship Mode:nk]>]]></run>
                                <run>Æ&#10;</run>
                              </formatted-text>
                              <point>
                                <visual-coordinate class='mark'>
                                  <tuple-reference>
                                    <tuple-descriptor>
                                      <pane-descriptor>
                                        <x-fields>
                                          <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]</field>
                                        </x-fields>
                                        <y-fields>
                                          <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Shipping Cost:qk]</field>
                                        </y-fields>
                                      </pane-descriptor>
                                      <columns>
                                        <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Shipping Cost:qk]</field>
                                        <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Ship Mode:nk]</field>
                                        <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]</field>
                                      </columns>
                                    </tuple-descriptor>
                                    <tuple>
                                      <value>98.884285714285681</value>
                                      <value>&quot;First Class&quot;</value>
                                      <value>&quot;Copiers&quot;</value>
                                    </tuple>
                                  </tuple-reference>
                                </visual-coordinate>
                              </point>
                              <body x='114' y='19' />
                            </annotation>
                          </annotations>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                  </story-points>
                </flipboard>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{3C9C3106-7A77-4179-B028-E024706E28F5}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='British Columbia'>
      <style />
      <size maxheight='805' maxwidth='1000' minheight='805' minwidth='1000' preset-index='17' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98012' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='994'>
            <zone h='98012' id='5' type-v2='layout-basic' w='98400' x='800' y='994' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='10932' id='8' name='Profit (Sub Cat in Furniture)' pane-specification-id='0' param='[federated.0zphur41ukrbkd1etanaq0hay071].[pcto:sum:Profit:qk:3]' type-v2='color' w='14000' x='70000' y='13292' />
        <zone h='10559' id='11' name='Average Profit (Category in British Col.)' pane-specification-id='0' param='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]' type-v2='color' w='14000' x='70000' y='1739' />
        <zone h='20994' id='13' name='Correlation (Qty, Discount) ' pane-specification-id='4' param='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]' type-v2='color' w='14000' x='84900' y='1366' />
        <zone h='62236' id='12' name='Correlation (Qty, Discount) ' w='51600' x='1100' y='36770' />
        <zone h='33292' id='3' name='Profit (Sub Cat in Furniture)' w='67800' x='900' y='1242' />
        <zone h='61242' id='10' name='Average Profit (Category in British Col.)' w='45500' x='54300' y='36398' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='33' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98012' id='32' param='vert' type-v2='layout-flow' w='98400' x='800' y='994'>
                <zone fixed-size='268' h='33292' id='3' is-fixed='true' name='Profit (Sub Cat in Furniture)' w='67800' x='900' y='1242'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10932' id='8' name='Profit (Sub Cat in Furniture)' pane-specification-id='0' param='[federated.0zphur41ukrbkd1etanaq0hay071].[pcto:sum:Profit:qk:3]' type-v2='color' w='14000' x='70000' y='13292'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='61242' id='10' is-fixed='true' name='Average Profit (Category in British Col.)' w='45500' x='54300' y='36398'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10559' id='11' name='Average Profit (Category in British Col.)' pane-specification-id='0' param='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]' type-v2='color' w='14000' x='70000' y='1739'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='62236' id='12' is-fixed='true' name='Correlation (Qty, Discount) ' w='51600' x='1100' y='36770'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='20994' id='13' name='Correlation (Qty, Discount) ' pane-specification-id='4' param='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]' type-v2='color' w='14000' x='84900' y='1366'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9650DA02-4CB9-4BBE-A5AF-4269ECD2A63A}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Canada States'>
      <style />
      <size maxheight='805' maxwidth='1000' minheight='805' minwidth='1000' preset-index='17' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='6' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98012' id='9' param='horz' type-v2='layout-flow' w='98400' x='800' y='994'>
            <zone h='98012' id='7' type-v2='layout-basic' w='98400' x='800' y='994' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='50062' id='11' name='Average Profit (States in Canada)' w='38600' x='1000' y='994' />
        <zone h='49814' id='24' name='Sub-Cat(Canada)' w='59100' x='40000' y='870' />
        <zone h='47950' id='5' name='Average Sales (States in Canada)' w='43200' x='1900' y='51677' />
        <zone h='47578' id='13' name='Average Shipping Cost (States in Canada) ' w='44000' x='45600' y='51801' />
        <zone h='24969' id='10' name='Average Sales (States in Canada)' pane-specification-id='0' param='[federated.0zphur41ukrbkd1etanaq0hay071].[none:State:nk]' type-v2='color' w='14600' x='84400' y='52671' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='35' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98012' id='34' param='vert' type-v2='layout-flow' w='98400' x='800' y='994'>
                <zone fixed-size='280' h='49814' id='24' is-fixed='true' name='Sub-Cat(Canada)' w='59100' x='40000' y='870'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50062' id='11' is-fixed='true' name='Average Profit (States in Canada)' w='38600' x='1000' y='994'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47950' id='5' is-fixed='true' name='Average Sales (States in Canada)' w='43200' x='1900' y='51677'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='24969' id='10' name='Average Sales (States in Canada)' pane-specification-id='0' param='[federated.0zphur41ukrbkd1etanaq0hay071].[none:State:nk]' type-v2='color' w='14600' x='84400' y='52671'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47578' id='13' is-fixed='true' name='Average Shipping Cost (States in Canada) ' w='44000' x='45600' y='51801'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B394D8B3-7347-424B-9C1D-7BA9815C170E}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='EMEA'>
      <style />
      <size maxheight='805' maxwidth='1000' minheight='805' minwidth='1000' preset-index='17' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98012' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='994'>
            <zone h='98012' id='5' type-v2='layout-basic' w='98400' x='800' y='994' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='43354' id='9' name='Average Profit (Sub-Category in EMEA)' w='82200' x='1200' y='54658' />
        <zone h='53416' id='3' name='Average Shipping Cost (EMEA) ' w='50700' x='700' y='621' />
        <zone h='55901' id='11' name='Average Profit (Category in EMEA)' w='46800' x='51900' y='994' />
        <zone h='7950' id='10' name='Average Profit (Sub-Category in EMEA)' pane-specification-id='0' param='[federated.0zphur41ukrbkd1etanaq0hay071].[:Measure Names]' type-v2='color' w='14000' x='85100' y='89441' />
        <zone h='10559' id='12' name='Average Profit (Category in EMEA)' pane-specification-id='0' param='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]' type-v2='color' w='14000' x='85100' y='77640' />
        <zone h='13168' id='8' name='Average Shipping Cost (EMEA) ' pane-specification-id='1' param='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Ship Mode:nk]' type-v2='color' w='14000' x='85100' y='62609' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='32' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='31' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='53416' id='3' is-fixed='true' name='Average Shipping Cost (EMEA) ' w='50700' x='700' y='621'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13168' id='8' name='Average Shipping Cost (EMEA) ' pane-specification-id='1' param='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Ship Mode:nk]' type-v2='color' w='14000' x='85100' y='62609'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='55901' id='11' is-fixed='true' name='Average Profit (Category in EMEA)' w='46800' x='51900' y='994'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10559' id='12' name='Average Profit (Category in EMEA)' pane-specification-id='0' param='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]' type-v2='color' w='14000' x='85100' y='77640'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43354' id='9' is-fixed='true' name='Average Profit (Sub-Category in EMEA)' w='82200' x='1200' y='54658'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7950' id='10' name='Average Profit (Sub-Category in EMEA)' pane-specification-id='0' param='[federated.0zphur41ukrbkd1etanaq0hay071].[:Measure Names]' type-v2='color' w='14000' x='85100' y='89441'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{BC7176DC-BA53-4D6B-8ED1-915AC897D06A}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Markets'>
      <style />
      <size maxheight='805' maxwidth='1000' minheight='805' minwidth='1000' preset-index='17' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98012' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='994'>
            <zone h='98012' id='5' type-v2='layout-basic' w='98400' x='800' y='994' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone fixed-size='123' h='42609' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='12900' x='86800' y='248'>
          <zone h='9069' id='8' name='Profit Margin (Markets)' pane-specification-id='2' param='[federated.0zphur41ukrbkd1etanaq0hay071].[usr:Calculation_262616188276289539:qk]' type-v2='color' w='12900' x='86800' y='248'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='21987' id='17' name='Average Profit (Category in Markets)' pane-specification-id='6' param='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]' type-v2='color' w='12900' x='86800' y='9317'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='11553' id='19' name='Average Profit (Segments in Markets)' pane-specification-id='1' param='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Segment:nk]' type-v2='color' w='12900' x='86800' y='31304'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='44472' id='16' name='Average Profit (Category in Markets)' w='46500' x='40100' y='745' />
        <zone h='54658' id='20' name='Average Profit (Markets YoY)' w='59500' x='40000' y='44969' />
        <zone h='43975' id='3' name='Profit Margin (Markets)' w='38200' x='1000' y='1242' />
        <zone h='53168' id='18' name='Average Profit (Segments in Markets)' w='39100' x='600' y='45839' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='44' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='43' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='44472' id='16' is-fixed='true' name='Average Profit (Category in Markets)' w='46500' x='40100' y='745'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='21987' id='17' name='Average Profit (Category in Markets)' pane-specification-id='6' param='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]' type-v2='color' w='12900' x='86800' y='9317'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43975' id='3' is-fixed='true' name='Profit Margin (Markets)' w='38200' x='1000' y='1242'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9069' id='8' name='Profit Margin (Markets)' pane-specification-id='2' param='[federated.0zphur41ukrbkd1etanaq0hay071].[usr:Calculation_262616188276289539:qk]' type-v2='color' w='12900' x='86800' y='248'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='54658' id='20' is-fixed='true' name='Average Profit (Markets YoY)' w='59500' x='40000' y='44969'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53168' id='18' is-fixed='true' name='Average Profit (Segments in Markets)' w='39100' x='600' y='45839'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11553' id='19' name='Average Profit (Segments in Markets)' pane-specification-id='1' param='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Segment:nk]' type-v2='color' w='12900' x='86800' y='31304'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{165385D0-CD23-4333-B9BC-5CCE225C32E9}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Markets Pt 2'>
      <style />
      <size maxheight='805' maxwidth='1000' minheight='805' minwidth='1000' preset-index='17' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98012' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='994'>
            <zone h='98012' id='5' type-v2='layout-basic' w='98400' x='800' y='994' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='67205' id='28' name='Correlation (Shipping Cost, Profit)' w='54100' x='1400' y='30435' />
        <zone h='66957' id='30' name='Average Shipping Cost (Markets)' w='42400' x='56300' y='30683' />
        <zone h='38385' id='26' name='Average Profit (Ship Mode in Markets)' w='75300' x='1200' y='745' />
        <zone h='26584' id='29' name='Correlation (Shipping Cost, Profit)' pane-specification-id='2' param='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]' type-v2='color' w='18800' x='61200' y='2360' />
        <zone h='10932' id='27' name='Average Profit (Ship Mode in Markets)' pane-specification-id='0' param='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]' type-v2='color' w='23900' x='73400' y='10683' />
        <zone h='9689' id='31' name='Average Shipping Cost (Markets)' pane-specification-id='0' param='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Shipping Cost:qk]' type-v2='color' w='24000' x='73400' y='2112' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='41' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='40' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='38385' id='26' is-fixed='true' name='Average Profit (Ship Mode in Markets)' w='75300' x='1200' y='745'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10932' id='27' name='Average Profit (Ship Mode in Markets)' pane-specification-id='0' param='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]' type-v2='color' w='23900' x='73400' y='10683'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='67205' id='28' is-fixed='true' name='Correlation (Shipping Cost, Profit)' w='54100' x='1400' y='30435'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='26584' id='29' name='Correlation (Shipping Cost, Profit)' pane-specification-id='2' param='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]' type-v2='color' w='18800' x='61200' y='2360'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='66957' id='30' is-fixed='true' name='Average Shipping Cost (Markets)' w='42400' x='56300' y='30683'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9689' id='31' name='Average Shipping Cost (Markets)' pane-specification-id='0' param='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Shipping Cost:qk]' type-v2='color' w='24000' x='73400' y='2112'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DC95F203-3FF0-4037-89E0-74A2886D4296}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Profit Margin (Markets)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
            <card pane-specification-id='2' param='[federated.0zphur41ukrbkd1etanaq0hay071].[usr:Calculation_262616188276289539:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Order Priority:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{89F6D70F-44EF-4ECC-923A-AF7A1085A013}' />
    </window>
    <window class='worksheet' name='Average Profit (Segments in Markets)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Segment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Order Priority:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Region:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Segment:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6DD64EC1-876B-4140-BEA2-8E53AD7E00E1}' />
    </window>
    <window class='worksheet' name='Average Profit (Category in Markets)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Customer Name:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Order Priority:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Segment:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C725FF56-81F6-4BDA-A907-B6A9A718EE95}' />
    </window>
    <window class='worksheet' name='Average Profit (Markets YoY)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Order Priority:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Segment:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Ship Mode:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[tyr:Order Date:ok]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{72146486-DE5D-4704-A638-246BB7254A02}' />
    </window>
    <window class='worksheet' name='Average Profit (Ship Mode in Markets)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
            <card pane-specification-id='0' param='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Order Priority:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7925D4E6-6ADA-4E32-8366-62EF48F0CE5C}' />
    </window>
    <window class='worksheet' name='Average Shipping Cost (Markets)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Shipping Cost:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{12472B53-3C29-40A9-A56F-9141A8B08E1C}' />
    </window>
    <window class='worksheet' name='Correlation (Shipping Cost, Profit)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Region:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Segment:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1B3B35FD-3EBD-4288-BCF5-3F52FCF73D7A}' />
    </window>
    <window class='worksheet' name='Average Profit (States in Canada)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zphur41ukrbkd1etanaq0hay071].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Order Priority:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Ship Mode:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{FC47B08C-9305-411C-A1F1-E9BD233C1B28}' />
    </window>
    <window class='worksheet' name='Sub-Cat(Canada)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{878B6333-E7B3-4BF8-BE21-2334103873A1}' />
    </window>
    <window class='worksheet' name='Average Shipping Cost (States in Canada) '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zphur41ukrbkd1etanaq0hay071].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Order Priority:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Ship Mode:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{3A653D56-B0A7-4FA0-8D2C-06D8FD69F3C5}' />
    </window>
    <window class='worksheet' name='Average Sales (States in Canada)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zphur41ukrbkd1etanaq0hay071].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Shipping Cost:qk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Order Priority:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Ship Mode:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{5D4CC370-E5E8-4B02-A2FE-0BF3DD7647B8}' />
    </window>
    <window class='worksheet' name='Average Profit (Category in British Col.)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Order Priority:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{641B7FF7-4BF1-401E-9D65-49BAA99E3A51}' />
    </window>
    <window class='worksheet' name='Profit (Sub Cat in Furniture)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zphur41ukrbkd1etanaq0hay071].[pcto:sum:Profit:qk:3]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Order Priority:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3F7CBD8F-B053-4DFC-931C-3B2FD18806B5}' />
    </window>
    <window class='worksheet' name='Correlation (Qty, Discount) '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Order Priority:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Region:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Segment:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A30582EC-506D-41CE-8CE5-88354B6F3B93}' />
    </window>
    <window class='worksheet' name='Average Profit (Category in EMEA)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:State:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{98F0BD74-8574-43CB-8B7E-86A3084F90E8}' />
    </window>
    <window class='worksheet' name='Average Profit (Sub-Category in EMEA)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='32'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zphur41ukrbkd1etanaq0hay071].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:State:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FED054AB-54FC-4A92-BC29-814120D43855}' />
    </window>
    <window class='worksheet' name='Average Shipping Cost (EMEA) '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Ship Mode:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Ship Mode:nk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6E0C7364-FA10-48DD-81A7-1D08D5097846}' />
    </window>
    <window class='worksheet' name='Average Profit (Order Priority in Markets)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
            <card pane-specification-id='0' param='[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[avg:Profit:qk]</field>
            <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C2359165-3181-4585-8452-25F098484498}' />
    </window>
    <window class='dashboard' name='Markets'>
      <viewpoints>
        <viewpoint name='Average Profit (Category in Markets)'>
          <zoom type='entire-view' />
          <highlight field='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Average Profit (Markets YoY)'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='4' />
        </viewpoint>
        <viewpoint name='Average Profit (Segments in Markets)'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Segment:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Profit Margin (Markets)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview>
        <device name='Generic Desktop Monitor' type='Desktop' />
      </device-preview>
      <simple-id uuid='{DE643045-F2E1-4AB0-A574-1F7EBFC60D83}' />
    </window>
    <window class='dashboard' name='Markets Pt 2'>
      <viewpoints>
        <viewpoint name='Average Profit (Ship Mode in Markets)' />
        <viewpoint name='Average Shipping Cost (Markets)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Correlation (Shipping Cost, Profit)'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C0F08122-4FAB-4072-AE60-ED57E6B956A0}' />
    </window>
    <window class='dashboard' name='Canada States'>
      <viewpoints>
        <viewpoint name='Average Profit (States in Canada)'>
          <zoom type='entire-view' />
          <highlight field='[federated.0zphur41ukrbkd1etanaq0hay071].[none:State:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Average Sales (States in Canada)'>
          <zoom type='entire-view' />
          <highlight field='[federated.0zphur41ukrbkd1etanaq0hay071].[none:State:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Average Shipping Cost (States in Canada) '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sub-Cat(Canada)'>
          <zoom type='entire-view' />
          <highlight field='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Sub-Category:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{F5E08FC5-0B23-4C9C-899D-4CEEBCDDBCCB}' />
    </window>
    <window class='dashboard' name='British Columbia'>
      <viewpoints>
        <viewpoint name='Average Profit (Category in British Col.)'>
          <highlight>
            <color-one-way>
              <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Correlation (Qty, Discount) '>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Market:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Profit (Sub Cat in Furniture)'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0zphur41ukrbkd1etanaq0hay071].[pcto:sum:Profit:qk:3]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{F6C8EBE9-6C3C-42CC-BB5B-8DA634FB7A23}' />
    </window>
    <window class='dashboard' name='EMEA'>
      <viewpoints>
        <viewpoint name='Average Profit (Category in EMEA)'>
          <zoom type='entire-view' />
          <highlight field='[federated.0zphur41ukrbkd1etanaq0hay071].[none:Category:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Average Profit (Sub-Category in EMEA)'>
          <zoom type='entire-view' />
          <highlight field='[federated.0zphur41ukrbkd1etanaq0hay071].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Average Shipping Cost (EMEA) '>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0zphur41ukrbkd1etanaq0hay071].[none:Ship Mode:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{F4E33D45-542E-4A37-8AC8-832DA3D914B4}' />
    </window>
    <window class='dashboard' maximized='true' name='BA Coursework'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{55DB8E66-B941-4EA8-87B1-DEBB871DAC2C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average Profit (Category in British Col.)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average Profit (Category in EMEA)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average Profit (Category in Markets)' width='192'>
      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
      MqmBZf8/rc8hpwLlrQ8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Average Profit (Markets YoY)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average Profit (Order Priority in Markets)' width='192'>
      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
      dXpxiZZgAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Average Profit (Segments in Markets)' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='128' name='Average Profit (Ship Mode in Markets)' width='192'>
      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
      fRYWwwmoNf8PGZMKJCie4PEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Average Profit (States in Canada)' width='192'>
      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
      G2vHISoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Average Profit (Sub-Category in EMEA)' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Average Sales (States in Canada)' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Average Shipping Cost (EMEA) ' width='192'>
      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
      27Kd4v8D1y32DcydGAgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Average Shipping Cost (Markets)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average Shipping Cost (States in Canada) ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='BA Coursework' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='British Columbia' width='192'>
      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
      gKuiHCVwc24wN+KOKsDVM0Otra00Nc09vQiXU5aUlZURCoWcxr8CELqOex5Wwc2wbGaBwuEw
      wWDwutN0pmnS3t5OVVXVTTvGOdydeLdtWxK5y8YEupjhbS4ymQydnZ3U1dXh9XpvR/UclhHe
      rVsQNzCNb4ZlYQINDg5edxYnkUjQ3d1NQ0MDun6n959yuBOoOTl4t21ddLl33ASSUjI0NERZ
      Wdms30ejUQYGBpysDQ4E3/7You9bvSQKMD02yPGTJ+kdmrhuuYu++nMltw2Hw4yNjTlZGxwA
      0Fetwr1u8ZKhwVIpwHSKNRvWYibic5aJfPdpRn7/D5lsaZk1Ae3Y2BjT09PObiwOlxBCkPuB
      98MitoclaVkFRSHOn2rBf53MysljxzEnJqiPXaskQ0NDZDIZqqurnWlOhxnoTU34du9aNHl3
      zBvUGBggfuw4OQ89dGmRQ0pJf38/uq5TXFw8o/HPxxv0SpaLV+XdKns5Y06GGf6TTy1KpNiS
      K8D1Alls276mQc+1tdFCd4mcTfZilL2XZV+9Xe1yJr5/PxP/6/O37B6x5K+D683cLOSNvlAF
      WIjshZRdKbKXO77du0mfbSH2k1tLmLvsvEHnQgixoLfTQmQvtFGsBNnLHSEEeR/9CO5bTJGv
      fvrTn/704lRpYYTHhmjv7MEfykPXZu8lMskY7R2dJNIGg309RFMG0xMjDI5mM8RdrQ9GMsrx
      s+1odpqOrj48ukpbRweqHsDnmbmAlolHONfRjcfroe3cOVImjA/3MRaOUZg/c/Aupc35ljOM
      Tk5jJCL09A2TSqXo6x8kv6gI5Yp6TIfHaO8dIuiGc63tCE2np6udREYSHulneHKawoI8BCAt
      k9MnjxHIL2W49/+2d267bRtBGP5IipZ1siRLchogkIuiTWPXN+3TtQjyKjm8SQ+3ToK6sGLH
      0QGy1pKokyWaJkWRu72wdXBsx22A1nXh/2YvODPcATFY7uzOP2UazS7B2KZ22GTJUHwoV1hK
      pIktnS3U/U6LeqtLfjXDzpttEitJ3u8f4CuddqNCf+Sxmk2jATIYs/32Dx4+/IJaeR9nLBn2
      WtSPOpjKp1ypEsvkiUbublBohkHsh+/xdnaQw+Fn2bg17wf2KZtfP6IzGF0rYy4nWEkuo/kj
      4oUiKvAI0EnHIzNWujkUddEiGYtgez6b66v8XmmxsbnFsH+ZnrBWP8Q0oHd4QKa4wcQboZkx
      IvpVRToKz/XwPA83kHz5II5FgfVCnP7JRZ6dVCaPqUt61jGPt55g1ausrq0TjocoPUFShxnN
      lm5QyKUJQ3XGeB0xcMeSYj5NtdFhY+sxg/b8LCWbf4AmfQaWQDNidNs9Hn3zLb7TxjBzRFQw
      67yuGUtk0wmUchGNPqPRiEmosRY1EbbHd5tf0T3q3vid/uswUinWfvoRs1j8LP1bC4CoAaWD
      Gsn49fd6hlad6lGfWCpLX1TxfIl/6tDp20Quta+XaEohGoIwmFCqNCkWkuy928VcTl2yncus
      4IcKacZpVUoE0uDUHmA7lyk4lJRIFEEYoiZjyo0eUa9NRfRJxS6uXsc9CyEEWgT2d/eIZ3K0
      RIWxNHGdHj3HnW28ZOjTaAiaVps3r9+yHI1COKZ6ZJFbifFud49oat5Iumc1EUJwOlGcDLv4
      MqD2fp9QS3IyamJ7/oylI/RdhBC0Og7JlMnE9wnGDofHNmlDUip9IJG9uejoLsDIZFh79pTo
      k7/fL+5fSYNeBaXUecZHv/Z0WymFlBJN04F5dkgp0PWrlabuTLNJ0/Hj/cP8/dpC5kmh0C7w
      HJ1LI6UCtPO6jLnex//VUxY8XddvtD/376zYQ2lnz66b+6LtRT+m+izILtrWADUdPzH3uw7p
      +wyev8D5+Ze/rHNrAXCPe/wTUErh/Pobg5evUK57o/x9ANzjf4mg22Xw8hXu9utPyv0JlL+j
      tedfLS4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Canada States' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Correlation (Qty, Discount) ' width='192'>
      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
      YMmF5v8DkhI3b4qOOIwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Correlation (Shipping Cost, Profit)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='EMEA' width='192'>
      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
      7P8/zg7Uut1ZDmgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Markets' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Markets Pt 2' width='192'>
      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
      w3QzoHAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='108' name='Profit (Sub Cat in Furniture)' width='184'>
      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
      DmoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Profit Margin (Markets)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sub-Cat(Canada)' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
